{"version":3,"sources":["Alert.js","List.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","type","msg","removeAlert","list","useEffect","timeout","setTimeout","clearTimeout","className","List","items","removeItem","editiItem","map","item","id","title","titles","onClick","getLocalStorage","localStorage","getItem","JSON","parse","App","useState","name","setName","setList","isEditing","setIsEditing","editID","setEditID","show","alert","setAlert","showAlert","setItem","stringify","action","onSubmit","e","preventDefault","newItem","Date","getTime","toString","style","textAlign","placeholder","value","onChange","target","filter","specificItem","find","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.99df8aa9.chunk.js","sourcesContent":["import React,{useEffect} from 'react'\r\n\r\nexport const Alert = ({type, msg, removeAlert, list}) => {\r\n\r\n    useEffect(() => {\r\n        const timeout = setTimeout(()=>{\r\n            removeAlert()\r\n        },3000)\r\n        return () => clearTimeout(timeout)\r\n    }, [list])\r\n    return (\r\n        <>\r\n            <p className={`alert alert-${type}`}>{msg}</p>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { FaEdit, FaTrash } from 'react-icons/fa';\r\n\r\nexport const List = ({items, removeItem, editiItem}) => {\r\n    return (\r\n        <div className=\"todo-list\">\r\n            {items.map((item)=>{\r\n                const { id,title,titles } = item;\r\n                return( \r\n                <article key={id} className=\"todo-item\">\r\n                    <p className=\"title\">{title}</p>\r\n                    <p className=\"title\">{titles}</p>\r\n                    <div className=\"btn-container\">\r\n                        <button type=\"button\" className=\"edit-btn\" onClick={() => editiItem(id)}>\r\n                            <FaEdit />\r\n                        </button>\r\n                        <button type=\"button\" className=\"delete-btn\" onClick={()=> removeItem(id)}>\r\n                            <FaTrash />\r\n                        </button>\r\n                    </div>\r\n                </article>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n","import React,{useState , useEffect} from 'react';\nimport { Alert } from './Alert';\nimport { List } from './List';\n\nconst getLocalStorage = () => {\n  let list = localStorage.getItem('list');\n  if(list){\n    return JSON.parse(localStorage.getItem('list'))\n  }\n  else{\n    return []\n  }\n}\n\n\nfunction App() {\n  const [name, setName] = useState('');\n  const [list, setList] = useState(getLocalStorage);\n  const [isEditing, setIsEditing] = useState(false);\n  const [editID, setEditID] = useState(null);\n  const [alert, setAlert] = useState({\n    show: true, \n    msg: '', \n    type: '',\n  })\n\n  const haldleSubmit = (e) => {\n    e.preventDefault()\n    if(!name){\n      //display alert\n      showAlert(true, 'danger', 'please enter value')\n      setAlert({show: true, msg: 'please enter value', type: 'denger'})\n    }\n    else if(name && isEditing){\n      //deal with edit\n      setList(list.map((item)=> {\n        if(item.id=== editID){\n          return{ ...item, title: name}\n        }\n        return item\n      })\n      )\n      setName('');\n      setEditID(null);\n      setIsEditing(false);\n      showAlert(true,'Success','value changed')\n    }\n    else{\n      showAlert(true, 'success', 'item added to the list')\n      const newItem = {id: new Date().getTime().toString(), title: name};\n      setList([...list, newItem]);\n      setName('');\n    }\n  }\n\n  const showAlert = (show=false, type=\"\", msg=\"\") =>{\n    setAlert({show: show,type,msg})\n  }\n  const clearList =()=>{\n    showAlert(true, 'danger', 'empty list');\n    setList([])\n  }\n  const removeItem = (id) =>{\n    showAlert(true, 'danger', 'item removed');\n    setList(list.filter((item)=> item.id !== id))\n  }\n\n  const editiItem = (id)=> {\n    const specificItem = list.find((item)=> item.id === id);\n    setIsEditing(true)\n    setEditID(id)\n    setName(specificItem.title)\n\n  }\n\n  useEffect(() => {\n    localStorage.setItem('list',JSON.stringify(list))\n  }, [list])\n\n  return (\n    <section className=\"section-center\">\n      <form action=\"todo-form\" onSubmit={haldleSubmit}>\n        {alert.show && <Alert {...alert} removeAlert={showAlert} list={list} />}\n        <h3 style={{textAlign: \"center\"}}>Todo</h3>\n        <div className=\"form-control\">\n          <input  type=\"text\" className=\"todo\" placeholder=\"Enter Todo\" value={name} onChange={(e) => setName(e.target.value)} />\n          <button type=\"submit\" className=\"submit-btn\" >\n            {isEditing ? 'edit' : 'submit'}\n          </button>\n        </div>\n      </form>\n      <div className=\"todo-container\">\n        <List items={list} removeItem={removeItem} editiItem={editiItem} />\n        <button className=\"clear-btn\" onClick={clearList}>clear item</button>\n      </div>\n    </section>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}